@using DynamicForm.Models
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations

<CascadingValue Value="this">
    @ChildContent
</CascadingValue>

@code {
    [CascadingParameter] private EditContext EditContext { get; set; }
    [Parameter] public List<FormField> Fields { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }

    private ValidationMessageStore _messageStore;

    protected override void OnInitialized()
    {
        _messageStore = new ValidationMessageStore(EditContext);
    }

    public bool Validate()
    {
        _messageStore.Clear();
        bool isValid = true;

        foreach (var field in Fields)
        {
            var fieldIdentifier = new FieldIdentifier(this, field.Name);

            if (field.IsRequired && string.IsNullOrEmpty(_messageStore[fieldIdentifier]?.ToString()))
            {
                _messageStore.Add(fieldIdentifier, $"{field.Label} is required");
                isValid = false;
            }

            // Add other validation rules as needed
        }

        EditContext.NotifyValidationStateChanged();
        return isValid;
    }
}